name: CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.ref }}-ci
  cancel-in-progress: true

jobs:
  lint:
    name: Lint, format, and type-check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Sync deps (pyproject-first)
        run: |
          uv venv
          ./scripts/uv-sync.sh --all

      - name: Ruff lint
        run: .venv/bin/ruff check --output-format=github .

      - name: Ruff format (check only)
        run: .venv/bin/ruff format --check .

      - name: Ty type check (non-blocking)
        continue-on-error: true
        env:
          PYTHONPATH: backend/src:frontend/src:functions/src
        run: .venv/bin/ty check .

  tests:
    name: Tests (${{ matrix.name }})
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: backend
            workdir: ./backend/src
            root: backend
          - name: frontend
            workdir: ./frontend/src
            root: frontend
          - name: functions
            workdir: ./functions/src
            root: functions
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: latest

      - name: Run tests (PR-aware)
        working-directory: ${{ matrix.workdir }}
        shell: bash
        run: |
          # On PRs, run tests only if changes under the project root; on pushes, always run
          if [ "$GITHUB_EVENT_NAME" = "pull_request" ]; then
            ROOT="${{ matrix.root }}"
            echo "Checking for changes under $ROOT/"
            # Ensure base ref is available
            if [ -n "$GITHUB_BASE_REF" ]; then
              git fetch origin "$GITHUB_BASE_REF" --depth=1 || true
              BASE_REF="origin/$GITHUB_BASE_REF"
            else
              git fetch origin main --depth=1 || true
              BASE_REF="origin/main"
            fi
            if ! git diff --name-only "$BASE_REF"...HEAD | grep -E "^$ROOT/" -q; then
              echo "No changes under $ROOT/. Skipping ${{ matrix.name }} tests."
              exit 0
            fi
          fi
          # Prepare venv and deps from repo root
          cd ../..
          uv venv
          ./scripts/uv-sync.sh --all
          cd - >/dev/null
          # Run tests
          ../../.venv/bin/python -m pytest -v
